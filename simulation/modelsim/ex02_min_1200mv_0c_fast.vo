// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "04/18/2022 14:54:53"

// 
// Device: Altera EP3C5F256C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ex02 (
	a,
	b,
	c,
	sum,
	carry);
input 	a;
input 	b;
input 	c;
output 	sum;
output 	carry;

// Design Ports Information
// sum	=>  Location: PIN_N1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// carry	=>  Location: PIN_R4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_R1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_L6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// c	=>  Location: PIN_P2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("ex02_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire \sum~output_o ;
wire \carry~output_o ;
wire \a~input_o ;
wire \b~input_o ;
wire \c~input_o ;
wire \sum~0_combout ;
wire \carry~0_combout ;


// Location: IOOBUF_X0_Y7_N23
cycloneiii_io_obuf \sum~output (
	.i(\sum~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sum~output_o ),
	.obar());
// synopsys translate_off
defparam \sum~output .bus_hold = "false";
defparam \sum~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X5_Y0_N23
cycloneiii_io_obuf \carry~output (
	.i(\carry~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\carry~output_o ),
	.obar());
// synopsys translate_off
defparam \carry~output .bus_hold = "false";
defparam \carry~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y5_N22
cycloneiii_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y9_N8
cycloneiii_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y4_N15
cycloneiii_io_ibuf \c~input (
	.i(c),
	.ibar(gnd),
	.o(\c~input_o ));
// synopsys translate_off
defparam \c~input .bus_hold = "false";
defparam \c~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N24
cycloneiii_lcell_comb \sum~0 (
// Equation(s):
// \sum~0_combout  = \a~input_o  $ (\b~input_o  $ (\c~input_o ))

	.dataa(\a~input_o ),
	.datab(gnd),
	.datac(\b~input_o ),
	.datad(\c~input_o ),
	.cin(gnd),
	.combout(\sum~0_combout ),
	.cout());
// synopsys translate_off
defparam \sum~0 .lut_mask = 16'hA55A;
defparam \sum~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N10
cycloneiii_lcell_comb \carry~0 (
// Equation(s):
// \carry~0_combout  = (\a~input_o  & ((\b~input_o ) # (\c~input_o ))) # (!\a~input_o  & (\b~input_o  & \c~input_o ))

	.dataa(\a~input_o ),
	.datab(gnd),
	.datac(\b~input_o ),
	.datad(\c~input_o ),
	.cin(gnd),
	.combout(\carry~0_combout ),
	.cout());
// synopsys translate_off
defparam \carry~0 .lut_mask = 16'hFAA0;
defparam \carry~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign sum = \sum~output_o ;

assign carry = \carry~output_o ;

endmodule
